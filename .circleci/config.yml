version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/node:10-stretch
    working_directory: ~/trudesk

commands:
  yarninstall:
    steps:
    - restore_cache:
        name: Restore Yarn Package Cache
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
    - run:
        name: Install Dependencies
        command: yarn install --frozen-lockfile
    - save_cache:
        name: Save Yarn Package Cache
        key: yarn-packages-{{ checksum "yarn.lock" }}
        paths:
        - ~/.cache/yarn

jobs:
  build_develop:
    docker:
    - image: circleci/node:10-stretch
    - image: circleci/mongo:3.6
    working_directory: ~/trudesk
    steps:
    - checkout
    - yarninstall
    - run:
        name: Run Tests
        command: yarn run test
    - run:
        name: Run Build
        command: yarn run build
    - run:
        name: Run Codacy
        command: yarn run codacy
  build_production:
    docker:
    - image: circleci/node:10-stretch
    - image: circleci/mongo:3.6
    working_directory: ~/trudesk
    steps:
    - checkout
    - run:
        name: Install npx
        command: npm i -g npx
    - yarninstall
    - run:
        name: Run Tests
        command: yarn run test
    - run:
        name: Run Codacy
        command: yarn run codacy
    - run:
        name: Semantic Release
        command: npx semantic-release
  build_docker_arm:
    docker:
      - image: ubuntu:18.04
    working_directory: ~/trudesk
    steps:
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Install Deps
        command: |
          apt-get update
          apt-get install -y git curl wget
    - checkout
    - run:
        name: Install Docker
        command: curl -fsSL https://get.docker.com/ | sh
    - run:
        name: Setup QEmu
        command: |
          docker run --rm --privileged multiarch/qemu-user-static:register --reset
          wget http://trudesk.io/install/qemu-arm-static
          chmod +x qemu-arm-static
    - run:
        name: Build Docker - ARM
        command: docker build -f Dockerfile.rp3 -t polonel/trudesk:latest-arm .
  build_docker_next:
    executor: docker-executor
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Build Docker Image
        command: |
          docker build -t polonel/trudesk:next .
    - run:
        name: Push Docker Image
        command: |
          echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
          docker push polonel/trudesk:next
  build_production_docker:
    executor: docker-executor
    environment:
      TEST_TAG: 1.0.3
    steps:
      - run:
          name: Setup Environment Variables
          command: |
            wget http://trudesk.io/tools/semver
            chmod +x semver
            cp semver /usr/bin/
            rm -rf semver
            echo 'export MAJOR=$(semver get major ${TEST_TAG})' >> $BASH_ENV
            echo 'export MINOR=$(semver get minor ${TEST_TAG})' >> $BASH_ENV
            echo 'export PATCH=$(semver get patch ${TEST_TAG})' >> $BASH_ENV
            echo 'export VERSION=$(echo "$MAJOR.$MINOR.$PATCH")' >> $BASH_ENV
            source $BASH_ENV
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image
          command: docker build -t polonel/trudesk:latest
      - run:
          name: Tag Docker Images
          command: |
            docker tag polonel/trudesk:latest polonel/trudesk:$MAJOR
            docker tag polonel/trudesk:latest polonel/trudesk:$(echo "$MAJOR.$MINOR")
            docker tag polonel/trudesk:latest polonel/trudesk:$VERSION

workflows:
  version: 2.1
  dev_docker_prod:
    jobs:
    - build_develop:
        filters:
          branches:
            only: develop
    - build_docker_next:
        filters:
          branches:
            only:
            - docker
            - dockernightly
    - build_docker_arm:
        filters:
          branches:
            only: dockerarm
    - build_production:
        filters:
          branches:
            only: master
    - build_production_docker:
#        requires:
#          - build_production
        filters:
          branches:
            only: docker